import React, { useState } from "react";
import { connect } from "react-redux";
import Tippy from "@tippyjs/react";
import { setReadGoal } from "../../actions/auth";
import { setAlert } from "../../actions/alert";
import { Link } from "react-router-dom";

const ReadingCard = ({ user, setReadGoal, setAlert }) => {
  const [change, setChange] = useState(false);

  const setGoal = async () => {
    const input = parseInt(document.getElementById("readingGoal").value);

    if (input) {
      await setReadGoal(input);
      setChange(false);
      setAlert("–ù–æ–≤–∞—è —Ü–µ–ª—å –∑–∞–¥–∞–Ω–∞!", "success");
    } else {
      setAlert("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã", "danger");
    }
  };

  const textAboutGoal = (
    <p className='card-text mt-1'>
      <Tippy content='–ü—Ä–æ—á–∏—Ç–∞—Ç—å –∏–µ—Ä–æ–≥–ª–∏—Ñ–æ–≤ –≤ –¥–µ–Ω—å'>
        <span>
          <span className='text-muted'>–î–Ω–µ–≤–Ω–∞—è —Ü–µ–ª—å:</span>{" "}
          {(user && user.daily_reading_goal) || "0"} Â≠ó
        </span>
      </Tippy>
    </p>
  );

  const changeGoalButton = (
    <Tippy content='–ü–æ–º–µ–Ω—è—Ç—å –¥–Ω–µ–≤–Ω—É—é —Ü–µ–ª—å'>
      <button
        type='button'
        className={`btn btn-${change ? "warning" : "info"} btn-sm`}
        id='changeGoalButton'
        onClick={() => setChange(!change)}
      >
        {change ? <i className='fas fa-edit'></i> : <i className='fas fa-sync-alt'></i>}
      </button>
    </Tippy>
  );

  const goalForm = (
    <div className='form-group'>
      <label className='col-form-label col-form-label-sm'>
        –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª-–≤–æ –∏–µ—Ä–æ–≥–ª–∏—Ñ–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∑–∞ –¥–µ–Ω—å
      </label>
      <div className='input-group mb-3'>
        <div className='input-group-prepend'>
          <button className='btn btn-secondary' type='button' onClick={setGoal}>
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
        </div>
        <input type='text' className='form-control' placeholder='–¶–∏—Ñ—Ä—ã' id='readingGoal' />
      </div>
    </div>
  );

  const progressBarDiv = (
    <div>
      <small>–ü—Ä–æ—á–∏—Ç–∞–Ω–æ {user && `${user.read_today_num} –∏–∑ ${user.daily_reading_goal} Â≠ó`}</small>
      <div className='progress'>
        <div
          className='progress-bar bg-success'
          role='progressbar'
          aria-valuenow='1'
          aria-valuemin='0'
          aria-valuemax='100'
          style={{
            width: `${user && `${(user.read_today_num / user.daily_reading_goal) * 100}%`}`
          }}
        ></div>
      </div>
      <small className='float-right'>c–±—Ä–æ—Å –≤ 00:00 –ø–æ –ú–°–ö</small>
    </div>
  );

  return user ? (
    <div className='card bg-light border-primary mb-3'>
      <div className='card-body'>
        <h4 className='card-title'>–î–Ω–µ–≤–Ω–∏–∫ –ß—Ç–µ–Ω–∏—è üìö</h4>
        <div className='textGoal'>
          {textAboutGoal}
          {user.daily_reading_goal ? changeGoalButton : ""}
        </div>

        {(!user.daily_reading_goal || change) && goalForm}
        {user.daily_reading_goal && progressBarDiv}
      </div>
    </div>
  ) : (
    <div className='card bg-light border-primary mb-3'>
      <div className='card-body'>
        <h5 className='card-title'>–î–Ω–µ–≤–Ω–∏–∫ —á—Ç–µ–Ω–∏—è üìö</h5>
        <p className='card-text'>–í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Å—Ç–∏ —É—á–µ—Ç –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –∏–µ—Ä–æ–≥–ª–∏—Ñ–æ–≤</p>
        <Link to='/login' className='card-link'>
          –í—Ö–æ–¥
        </Link>
        <Link to='/register' className='card-link'>
          –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        </Link>
      </div>
    </div>
  );
};

const mapStateToProps = state => ({
  user: state.auth.user
});

export default connect(mapStateToProps, { setReadGoal, setAlert })(ReadingCard);
